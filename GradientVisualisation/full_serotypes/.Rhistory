offset = 0.7,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = topotype_colors_abbreviated, name = "Topotype") +
theme(legend.position = "right")
t_with_topotype <- t_with_topotype + ggnewscale::new_scale_fill()
t_with_lineage <- gheatmap(t_with_topotype, heat_data["Lineage"],
offset = 0.9,
width = 0.1,
color = NULL,
colnames = FALSE)
scale_fill_manual(values = lineage_colors, name = "Lineage")
return(t_with_lineage)
}
for (file in trees) {
g = plot_tree_with_gradient_and_heatmap(file, meta_path, serotype_colors, topotype_colors, lineage_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1]) +
guides(
fill = guide_legend(
ncol = 1,
keywidth = unit(0.1, "cm"),
keyheight = unit(0.1, "cm"),
override.aes = list(size = 2)
)
) +
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 18)
)
legend <- cowplot::get_legend(g)
g_nolegend <- g + theme(legend.position = "none")
png_file <- paste0("no_similar/", basename(file), "_combined.png")
svg_file <- paste0("no_similar/", basename(file), "_combined.svg")
ggsave(png_file, g_nolegend, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g_nolegend, height = 10, width = 7, dpi = 600)
}
for (file in trees) {
g = plot_tree_with_gradient_and_heatmap(file, meta_path, serotype_colors, topotype_colors, lineage_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1]) +
guides(
fill = guide_legend(
ncol = 1,
keywidth = unit(0.1, "cm"),
keyheight = unit(0.1, "cm"),
override.aes = list(size = 2)
)
) +
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 18)
)
legend <- cowplot::get_legend(g)
g_nolegend <- g + theme(legend.position = "none")
png_file <- paste0("no_similar/", basename(file), "_combined.png")
svg_file <- paste0("no_similar/", basename(file), "_combined.svg")
ggsave(png_file, g_nolegend, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g_nolegend, height = 10, width = 7, dpi = 600)
}
ggsave(paste0("no_similar/", basename(file), "_legend.png"),
plot = legend, height = 10, width = 7, dpi = 600)
ggsave(paste0("no_similar/", basename(file), "_legend.svg"),
plot = legend, height = 10, width = 7, dpi = 600)
for (file in trees) {
g = plot_tree_with_gradient_and_heatmap(file, meta_path, serotype_colors, topotype_colors, lineage_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1]) +
guides(
fill = guide_legend(
ncol = 1,
keywidth = unit(0.1, "cm"),
keyheight = unit(0.1, "cm"),
override.aes = list(size = 2)
)
) +
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 18)
)
legend <- cowplot::get_legend(g)
g_nolegend <- g + theme(legend.position = "none")
png_file <- paste0("no_similar/", basename(file), "_combined.png")
svg_file <- paste0("no_similar/", basename(file), "_combined.svg")
ggsave(png_file, g_nolegend, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g_nolegend, height = 10, width = 7, dpi = 600)
}
plot_tree_with_gradient_and_heatmap = function(tree_file, meta, serotype_colors, topotype_colors, lineage_colors) {
tree = read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
info$Topotype <- case_when(
info$Topotype == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
info$Topotype == "EAST-AFRICA-1-EA-1" ~ "EA-1",
info$Topotype == "EAST-AFRICA-2-EA-2" ~ "EA-2",
info$Topotype == "EAST-AFRICA-3-EA-3" ~ "EA-3",
info$Topotype == "EAST-AFRICA-4-EA-4" ~ "EA-4",
info$Topotype == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
info$Topotype == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
info$Topotype == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
info$Topotype == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
info$Topotype == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
info$Topotype == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
info$Topotype == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
info$Topotype == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
info$Topotype == "V-East Africa-EA" ~ "V-EA",
info$Topotype == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
info$Topotype == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ info$Topotype
)
unique_topotypes_abbreviated <- unique(info$Topotype)
topotype_colors_abbreviated <- topotype_colors
names(topotype_colors_abbreviated) <- sapply(names(topotype_colors), function(x) {
case_when(
x == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
x == "EAST-AFRICA-1-EA-1" ~ "EA-1",
x == "EAST-AFRICA-2-EA-2" ~ "EA-2",
x == "EAST-AFRICA-3-EA-3" ~ "EA-3",
x == "EAST-AFRICA-4-EA-4" ~ "EA-4",
x == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
x == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
x == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
x == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
x == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
x == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
x == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
x == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
x == "V-East Africa-EA" ~ "V-EA",
x == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
x == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ x
)
})
heat_data = data.frame(
"serotype" = info$serotype,
"Topotype" = info$Topotype,
"Lineage" = info$lineage
)
rownames(heat_data) <- info$GBAC
t = ggtree(tree_rooted, size = 0.1) %<+% info +
geom_point2(aes(label=label,
subset = !is.na(as.numeric(label)) & as.numeric(label) < 95), size=0.1, color="red",alpha=0.5) +
geom_tiplab(size = 1, aes(color=label)) +
#geom_text2(aes(label = label,
#               subset = !is.na(as.numeric(label)) & as.numeric(label) >= 95),
#           size = 0.5, color = "black") +
scale_color_manual(values=info$color, guide='none') +
theme(legend.position = "none")
t_with_serotype <- gheatmap(t, heat_data["serotype"],
offset = 0.5,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = serotype_colors, name = "Serotype") +
theme(legend.position = "right")
t_with_serotype <- t_with_serotype + ggnewscale::new_scale_fill()
t_with_topotype <- gheatmap(t_with_serotype, heat_data["Topotype"],
offset = 0.7,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = topotype_colors_abbreviated, name = "Topotype") +
theme(legend.position = "right")
t_with_topotype <- t_with_topotype + ggnewscale::new_scale_fill()
t_with_lineage <- gheatmap(t_with_topotype, heat_data["Lineage"],
offset = 0.9,
width = 0.1,
color = NULL,
colnames = FALSE)
scale_fill_manual(values = lineage_colors, name = "Lineage")
return(t_with_lineage)
}
for (file in trees) {
g = plot_tree_with_gradient_and_heatmap(file, meta_path, serotype_colors, topotype_colors, lineage_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1]) +
guides(
fill = guide_legend(
ncol = 1,
keywidth = unit(0.1, "cm"),
keyheight = unit(0.1, "cm"),
override.aes = list(size = 2)
)
) +
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 18)
)
legend <- cowplot::get_legend(g)
g_nolegend <- g + theme(legend.position = "none")
png_file <- paste0("no_similar/", basename(file), "_combined.png")
svg_file <- paste0("no_similar/", basename(file), "_combined.svg")
ggsave(png_file, g_nolegend, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g_nolegend, height = 10, width = 7, dpi = 600)
}
ggsave(paste0("no_similar/", basename(file), "_legend.png"),
plot = legend, height = 10, width = 7, dpi = 600)
ggsave(paste0("no_similar/", basename(file), "_legend.svg"),
plot = legend, height = 10, width = 7, dpi = 600)
library('ggtree')
library('ggplot2')
library('phytools')
library('dplyr')
library('ggnewscale')
library('cowplot')
library('ape')
library('RColorBrewer')
library('randomcoloR')
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/GradientVisualisation/full_serotypes")
source("../modified_gradients.R")
trees = list.files(path = "no_similar_trees/", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_no_similar_upd.csv"
info = read.csv(meta_path)
unique_serotypes <- unique(info$serotype)
serotype_colors <- setNames(c("#B7B718","#1F93B3" ,"#4AC245", "#BDB9DB","#3F5289", "#D54514", "#B67603"),
unique_serotypes)
unique_topotypes <- unique(info$Topotype)
unique_lineages <- unique(info$lineage)
#lineage_colors <- setNames(rainbow(length(unique_lineages)), unique_lineages)
lineage_colors <- setNames(
distinctColorPalette(k = length(unique_lineages)),
unique_lineages
)
topotype_colors <- setNames(
distinctColorPalette(k = length(unique_topotypes)),
unique_topotypes
)
plot_tree_with_gradient_and_heatmap = function(tree_file, meta, serotype_colors, topotype_colors, lineage_colors) {
tree = read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
info$Topotype <- case_when(
info$Topotype == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
info$Topotype == "EAST-AFRICA-1-EA-1" ~ "EA-1",
info$Topotype == "EAST-AFRICA-2-EA-2" ~ "EA-2",
info$Topotype == "EAST-AFRICA-3-EA-3" ~ "EA-3",
info$Topotype == "EAST-AFRICA-4-EA-4" ~ "EA-4",
info$Topotype == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
info$Topotype == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
info$Topotype == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
info$Topotype == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
info$Topotype == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
info$Topotype == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
info$Topotype == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
info$Topotype == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
info$Topotype == "V-East Africa-EA" ~ "V-EA",
info$Topotype == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
info$Topotype == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ info$Topotype
)
unique_topotypes_abbreviated <- unique(info$Topotype)
topotype_colors_abbreviated <- topotype_colors
names(topotype_colors_abbreviated) <- sapply(names(topotype_colors), function(x) {
case_when(
x == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
x == "EAST-AFRICA-1-EA-1" ~ "EA-1",
x == "EAST-AFRICA-2-EA-2" ~ "EA-2",
x == "EAST-AFRICA-3-EA-3" ~ "EA-3",
x == "EAST-AFRICA-4-EA-4" ~ "EA-4",
x == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
x == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
x == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
x == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
x == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
x == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
x == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
x == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
x == "V-East Africa-EA" ~ "V-EA",
x == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
x == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ x
)
})
heat_data = data.frame(
"serotype" = info$serotype,
"Topotype" = info$Topotype,
"Lineage" = info$lineage
)
rownames(heat_data) <- info$GBAC
info$label_with_topotype <- paste0(info$GBAC, " [", info$Topotype, "]")
t = ggtree(tree_rooted, size = 0.1) %<+% info +
geom_point2(aes(label=label,
subset = !is.na(as.numeric(label)) & as.numeric(label) < 95),
size=0.1, color="red", alpha=0.5) +
geom_tiplab(aes(label=label_with_topotype), size = 0.4) +
theme(legend.position = "none")
t_with_serotype <- gheatmap(t, heat_data["serotype"],
offset = 0.5,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = serotype_colors, name = "Serotype") +
theme(legend.position = "right")
t_with_serotype <- t_with_serotype + ggnewscale::new_scale_fill()
t_with_topotype <- gheatmap(t_with_serotype, heat_data["Topotype"],
offset = 0.7,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = topotype_colors_abbreviated, name = "Topotype") +
theme(legend.position = "right")
t_with_topotype <- t_with_topotype + ggnewscale::new_scale_fill()
t_with_lineage <- gheatmap(t_with_topotype, heat_data["Lineage"],
offset = 0.9,
width = 0.1,
color = NULL,
colnames = FALSE)
scale_fill_manual(values = lineage_colors, name = "Lineage")
return(t_with_lineage)
}
plot_tree_with_gradient_and_heatmap = function(tree_file, meta, serotype_colors, topotype_colors, lineage_colors) {
tree = read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
info$Topotype <- case_when(
info$Topotype == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
info$Topotype == "EAST-AFRICA-1-EA-1" ~ "EA-1",
info$Topotype == "EAST-AFRICA-2-EA-2" ~ "EA-2",
info$Topotype == "EAST-AFRICA-3-EA-3" ~ "EA-3",
info$Topotype == "EAST-AFRICA-4-EA-4" ~ "EA-4",
info$Topotype == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
info$Topotype == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
info$Topotype == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
info$Topotype == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
info$Topotype == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
info$Topotype == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
info$Topotype == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
info$Topotype == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
info$Topotype == "V-East Africa-EA" ~ "V-EA",
info$Topotype == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
info$Topotype == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ info$Topotype
)
unique_topotypes_abbreviated <- unique(info$Topotype)
topotype_colors_abbreviated <- topotype_colors
names(topotype_colors_abbreviated) <- sapply(names(topotype_colors), function(x) {
case_when(
x == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
x == "EAST-AFRICA-1-EA-1" ~ "EA-1",
x == "EAST-AFRICA-2-EA-2" ~ "EA-2",
x == "EAST-AFRICA-3-EA-3" ~ "EA-3",
x == "EAST-AFRICA-4-EA-4" ~ "EA-4",
x == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
x == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
x == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
x == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
x == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
x == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
x == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
x == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
x == "V-East Africa-EA" ~ "V-EA",
x == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
x == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ x
)
})
heat_data = data.frame(
"serotype" = info$serotype,
"Topotype" = info$Topotype,
"Lineage" = info$lineage
)
rownames(heat_data) <- info$GBAC
info$label_with_topotype <- paste0(info$GBAC, " [", info$Topotype, "]")
t = ggtree(tree_rooted, size = 0.1) %<+% info +
geom_point2(aes(label=label,
subset = !is.na(as.numeric(label)) & as.numeric(label) < 95),
size=0.1, color="red", alpha=0.5) +
geom_tiplab(aes(label=label_with_topotype), size = 1) +
theme(legend.position = "none")
t_with_serotype <- gheatmap(t, heat_data["serotype"],
offset = 0.5,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = serotype_colors, name = "Serotype") +
theme(legend.position = "right")
t_with_serotype <- t_with_serotype + ggnewscale::new_scale_fill()
t_with_topotype <- gheatmap(t_with_serotype, heat_data["Topotype"],
offset = 0.7,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = topotype_colors_abbreviated, name = "Topotype") +
theme(legend.position = "right")
t_with_topotype <- t_with_topotype + ggnewscale::new_scale_fill()
t_with_lineage <- gheatmap(t_with_topotype, heat_data["Lineage"],
offset = 0.9,
width = 0.1,
color = NULL,
colnames = FALSE)
scale_fill_manual(values = lineage_colors, name = "Lineage")
return(t_with_lineage)
}
for (file in trees) {
g = plot_tree_with_gradient_and_heatmap(file, meta_path, serotype_colors, topotype_colors, lineage_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1]) +
guides(
fill = guide_legend(
ncol = 1,
keywidth = unit(0.1, "cm"),
keyheight = unit(0.1, "cm"),
override.aes = list(size = 2)
)
) +
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 18)
)
legend <- cowplot::get_legend(g)
g_nolegend <- g + theme(legend.position = "none")
pdf_file <- paste0("no_similar/", basename(file), "_combined.pdf")
ggsave(pdf_file, g_nolegend, height = 10, width = 7)
}
plot_tree_with_gradient_and_heatmap = function(tree_file, meta, serotype_colors, topotype_colors, lineage_colors) {
tree = read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
info$Topotype <- case_when(
info$Topotype == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
info$Topotype == "EAST-AFRICA-1-EA-1" ~ "EA-1",
info$Topotype == "EAST-AFRICA-2-EA-2" ~ "EA-2",
info$Topotype == "EAST-AFRICA-3-EA-3" ~ "EA-3",
info$Topotype == "EAST-AFRICA-4-EA-4" ~ "EA-4",
info$Topotype == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
info$Topotype == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
info$Topotype == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
info$Topotype == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
info$Topotype == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
info$Topotype == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
info$Topotype == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
info$Topotype == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
info$Topotype == "V-East Africa-EA" ~ "V-EA",
info$Topotype == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
info$Topotype == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ info$Topotype
)
unique_topotypes_abbreviated <- unique(info$Topotype)
topotype_colors_abbreviated <- topotype_colors
names(topotype_colors_abbreviated) <- sapply(names(topotype_colors), function(x) {
case_when(
x == "EUROPE-SOUTH-AMERICA-EURO-SA-SOUTH" ~ "EURO-SA",
x == "EAST-AFRICA-1-EA-1" ~ "EA-1",
x == "EAST-AFRICA-2-EA-2" ~ "EA-2",
x == "EAST-AFRICA-3-EA-3" ~ "EA-3",
x == "EAST-AFRICA-4-EA-4" ~ "EA-4",
x == "I-NORTHWEST-ZIMBABWE-NWZ" ~ "I-NWZ",
x == "I-SOUTHEAST-ZIMBABWE-SEZ" ~ "I-SEZ",
x == "III-NORTHWEST-ZIMBABWE-NWZ" ~ "III-NWZ",
x == "II-WESTERN-ZIMBABWE-WZ" ~ "II-WZ",
x == "III-WESTERN-ZIMBABWE-WZ" ~ "III-WZ",
x == "INDONESIA-1-ISA-1-1" ~ "ISA-1",
x == "IV-EAST-AFRICA1-EA-1" ~ "IV-EA-1",
x == "MIDDLE-EAST-SOUTH-ASIA-ME-SA" ~ "ME-SA",
x == "V-East Africa-EA" ~ "V-EA",
x == "VII-EAST-AFRICA-2-EA-2" ~ "VII-EA-2",
x == "WEST-AFRICA-WA" ~ "WA",
TRUE ~ x
)
})
heat_data = data.frame(
"serotype" = info$serotype,
"Topotype" = info$Topotype,
"Lineage" = info$lineage
)
rownames(heat_data) <- info$GBAC
info$label_with_topotype <- paste0(info$GBAC, " [", info$Topotype, "]")
t = ggtree(tree_rooted, size = 0.1) %<+% info +
geom_point2(aes(label=label,
subset = !is.na(as.numeric(label)) & as.numeric(label) < 95), size=0.1, color="red",alpha=0.5) +
geom_tiplab(aes(label=label_with_topotype), size = 0.8) +
theme(legend.position = "none")
t_with_serotype <- gheatmap(t, heat_data["serotype"],
offset = 0.5,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = serotype_colors, name = "Serotype") +
theme(legend.position = "right")
t_with_serotype <- t_with_serotype + ggnewscale::new_scale_fill()
t_with_topotype <- gheatmap(t_with_serotype, heat_data["Topotype"],
offset = 0.7,
width = 0.1,
color = NULL,
colnames = FALSE) +
scale_fill_manual(values = topotype_colors_abbreviated, name = "Topotype") +
theme(legend.position = "right")
t_with_topotype <- t_with_topotype + ggnewscale::new_scale_fill()
t_with_lineage <- gheatmap(t_with_topotype, heat_data["Lineage"],
offset = 0.9,
width = 0.1,
color = NULL,
colnames = FALSE)
scale_fill_manual(values = lineage_colors, name = "Lineage")
return(t_with_lineage)
}
for (file in trees) {
g = plot_tree_with_gradient_and_heatmap(file, meta_path, serotype_colors, topotype_colors, lineage_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1]) +
guides(
fill = guide_legend(
ncol = 1,
keywidth = unit(0.1, "cm"),
keyheight = unit(0.1, "cm"),
override.aes = list(size = 2)
)
) +
theme(
legend.text = element_text(size = 14),
legend.title = element_text(size = 18)
)
legend <- cowplot::get_legend(g)
g_nolegend <- g + theme(legend.position = "none")
pdf_file <- paste0("no_similar/", basename(file), "_combined.pdf")
ggsave(pdf_file, g_nolegend, height = 10, width = 7)
}
