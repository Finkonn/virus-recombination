library(ggtree)
library(ggplot2)
library(phytools)
library(dplyr)
library(ggnewscale)
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/GradientVisualisation/A_topotypes")
source("../modified_gradients.R")
library(ggtree)
library(ggplot2)
library(phytools)
library(dplyr)
library(ggnewscale)
library(randomcoloR)
library(ggtree)
library(ggplot2)
library(phytools)
library(dplyr)
library(ggnewscale)
library(randomcoloR)
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/GradientVisualisation/A_topotypes")
source("../modified_gradients.R")
# Function to plot phylogenetic tree with country + host heatbars
plot_tree_with_meta = function(tree_file, meta){
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
# ---- Build base tree ----
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "right") +
xlim_expand(0.5, panel = 'label')
# ---- Prepare heatmap data ----
heat_data = data.frame(
"Country" = info$country,
"Host" = info$host
)
rownames(heat_data) <- info$GBAC   # assumes GBAC matches tip labels
# ---- Add Country ----
t_country = gheatmap(t, heat_data["Country"],
offset = 0.5, width = 0.1,
colnames = FALSE) +
scale_fill_manual(values = setNames(distinctColorPalette(length(unique(info$country))),
unique(info$country)),
name = "Country")
# ---- Add Host (new fill scale) ----
t_host = t_country + ggnewscale::new_scale_fill()
t_host = gheatmap(t_host, heat_data["Host"],
offset = 0.7, width = 0.1,
colnames = FALSE) +
scale_fill_manual(values = setNames(distinctColorPalette(length(unique(info$host))),
unique(info$host)),
name = "Host")
return(t_host)
}
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_A.csv"
for (file in trees){
g = plot_tree_with_meta(file, meta_path) +
ggtitle(strsplit(basename(file), ".treefile")[[1]][1])
png_file <- paste0("With_bars/", basename(file), "_with_bars.png")
svg_file <- paste0("With_bars/", basename(file), "_with_bars.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 300)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Function to plot phylogenetic tree with country + host heatbars
plot_tree_with_meta = function(tree_file, meta){
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
# ---- Build base tree ----
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color, guide='none') +
theme(legend.position = "none") +
xlim_expand(0.5, panel = 'label')
# ---- Prepare heatmap data ----
heat_data = data.frame(
"Country" = info$country,
"Host" = info$host
)
rownames(heat_data) <- info$GBAC   # assumes GBAC matches tip labels
# ---- Add Country ----
t_country = gheatmap(t, heat_data["Country"],
offset = 0.5, width = 0.1,
colnames = FALSE) +
scale_fill_manual(values = setNames(distinctColorPalette(length(unique(info$country))),
unique(info$country)),
name = "Country")
# ---- Add Host (new fill scale) ----
t_host = t_country + ggnewscale::new_scale_fill()
t_host = gheatmap(t_host, heat_data["Host"],
offset = 0.7, width = 0.1,
colnames = FALSE) +
scale_fill_manual(values = setNames(distinctColorPalette(length(unique(info$host))),
unique(info$host)),
name = "Host")
return(t_host)
}
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_A.csv"
for (file in trees){
g = plot_tree_with_meta(file, meta_path) +
ggtitle(strsplit(basename(file), ".treefile")[[1]][1])
png_file <- paste0("With_bars/", basename(file), "_with_bars.png")
svg_file <- paste0("With_bars/", basename(file), "_with_bars.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 300)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
library(ggtree)
library(ggplot2)
library(phytools)
library(dplyr)
library(ggnewscale)
library(randomcoloR)
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/GradientVisualisation/A_topotypes")
source("../modified_gradients.R")
# Function to plot phylogenetic tree with country + host heatbars
plot_tree_with_meta = function(tree_file, meta){
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
# ---- Build base tree ----
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color, guide='none') +
theme(legend.position = "none") +
xlim_expand(0.5, panel = 'label')
# ---- Prepare heatmap data ----
heat_data = data.frame(
"Country" = info$country,
"Host" = info$host
)
rownames(heat_data) <- info$GBAC   # assumes GBAC matches tip labels
# ---- Add Country ----
t_country = gheatmap(t, heat_data["Country"],
offset = 0.5, width = 0.1,
colnames = FALSE) +
scale_fill_manual(values = setNames(distinctColorPalette(length(unique(info$country))),
unique(info$country)),
name = "Country")
# ---- Add Host (new fill scale) ----
t_host = t_country + ggnewscale::new_scale_fill()
t_host = gheatmap(t_host, heat_data["Host"],
offset = 0.7, width = 0.1,
colnames = FALSE) +
scale_fill_manual(values = setNames(distinctColorPalette(length(unique(info$host))),
unique(info$host)),
name = "Host")
return(t_host)
}
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_A.csv"
for (file in trees){
g = plot_tree_with_meta(file, meta_path) +
ggtitle(strsplit(basename(file), ".treefile")[[1]][1])
png_file <- paste0("With_bars/", basename(file), "_with_bars.png")
svg_file <- paste0("With_bars/", basename(file), "_with_bars.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 300)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
