#source("add_gradient_colors.R")
source("../modified_gradients.R")
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(0.5, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_Asia1.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/C_topotypes")
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(0.5, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_C.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/O_topotypes")
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(0.5, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_O.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/SAT1_topotypes")
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(1, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT1.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2, panel = 'label')
return(t)
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT1.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/SAT2_topotypes")
return(t)
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(1, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT2.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2, panel = 'label')
return(t)
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT2.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2.5, panel = 'label')
return(t)
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2.5, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT2.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/full_serotypes")
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(2, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_full.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/SAT3_topotypes")
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT3.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(3, panel = 'label')
return(t)
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(3, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT3.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim_expand(3, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT3.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none")
#xlim_expand(1, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT3.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim(NA, max(tree_rooted$edge.length) + 5)
#xlim_expand(1, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT3.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
plot_tree = function(tree_file, meta){
tree =  read.tree(tree_file)
# root by midpoint
tree_rooted = midpoint.root(tree)
# read csv file with metadata
info = read.csv(meta)
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_text2(aes(label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) >= 80),
size = 1, color = "black") +
geom_tiplab(size = 2, aes(color=label)) +
scale_color_manual(values=info$color) +
theme(legend.position = "none") +
xlim(NA, max(tree_rooted$edge.length) + 2)
#xlim_expand(1, panel = 'label')
return(t)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_SAT3.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/", basename(file), ".png")
svg_file <- paste0("Images/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
