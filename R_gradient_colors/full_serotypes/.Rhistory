library('dplyr')
# Установка рабочей директории
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/full_serotypes")
# Загрузка пользовательской функции
source("../modified_gradients.R")
# Загрузка данных
tree = read.tree("VP1.treefile")
tree_rooted = midpoint.root(tree)
info = read.csv("../metadata.csv")
# Определение серотипов и назначение фиксированных цветов
unique_serotypes <- unique(info$serotype)
serotype_colors <- setNames(c("red", "blue", "green", "purple", "orange", "cyan", "pink"),
unique_serotypes)
# Загрузка дерева P3
tree_p3 <- read.tree("P3.treefile")
# Просмотр всех листьев дерева
tree_p3$tip.label
# Проверка наличия всех листьев из дерева в метаданных
missing_labels <- setdiff(tree_p3$tip.label, info$GBAC)
print(missing_labels)
# Загрузка дерева P3
tree_p3 <- read.tree("P3.treefile")
# Просмотр всех листьев дерева
tree_p3$tip.label
# Проверка наличия всех листьев из дерева в метаданных
missing_labels <- setdiff(tree_p3$tip.label, info$GBAC)
print(missing_labels)
# Подключение библиотек
library('ggtree')
library('ggplot2')
library('phytools')
library('dplyr')
# Установка рабочей директории
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/full_serotypes")
# Загрузка пользовательской функции
source("../modified_gradients.R")
# Загрузка данных
tree = read.tree("VP1.treefile")
tree_rooted = midpoint.root(tree)
info = read.csv("../metadata.csv")
# Определение серотипов и назначение фиксированных цветов
unique_serotypes <- unique(info$serotype)
serotype_colors <- setNames(c("red", "blue", "green", "purple", "orange", "cyan", "pink"),
unique_serotypes)
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 2,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 3,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 10,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 10,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 20,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 20,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
t = t + theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 20,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
t = t + theme(plot.margin = unit(c(10, 10, 10, 10), "cm"))
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 20,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
t = t + theme(plot.margin = unit(c(2, 1, 1, 1), "cm"))
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "top",           # Название bar сверху
colnames_angle = 90,                  # Под прямым углом
colnames_offset_y = 20,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Функция для построения дерева с heatmap для серотипов
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
# Загрузка дерева
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
# Загрузка метаданных
info = read.csv(meta)
# Подготовка данных для heatmap
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
# Построение дерева
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
# Добавление heatmap для серотипов
t = gheatmap(t, serotypes,
offset = 0.5,                          # Смещение heatmap относительно дерева
width = 0.2,                        # Увеличение ширины bar
colnames_position = "bottom",           # Название bar сверху
colnames_angle = 0,                  # Под прямым углом
colnames_offset_y = 20,               # Смещение названия bar вверх
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype") # Легенда только для value
return(t)
}
# Получение списка файлов с деревьями
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
# Построение деревьев с heatmap
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
plot_tree_with_heatmap = function(tree_file, meta, serotype_colors){
tree =  read.tree(tree_file)
tree_rooted = midpoint.root(tree)
info = read.csv(meta)
serotypes = data.frame("serotypes" = info[,c("serotype")])
rownames(serotypes) <- info$GBAC
t = ggtree(tree_rooted, size=0.1) %<+% info +
geom_tiplab(size = 0.5, aes(color=serotype)) +
scale_color_manual(values=serotype_colors, guide="none") +
theme(legend.position = "right")
t = gheatmap(t, serotypes,
offset = 0.5,
width = 0.2,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_y = 20,
color = NULL) +
scale_fill_manual(values=serotype_colors, name = "Serotype")
return(t)
}
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_full.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/SerotypeCladeBar", basename(file), ".png")
svg_file <- paste0("Images/SerotypeCladeBar", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
library('ggtree')
library(ggplot2)
library('phytools')
setwd("C:/Users/Mate_/Downloads/Diploma/virus-recombination/R_gradient_colors/full_serotypes")
#source("add_gradient_colors.R")
source("../modified_gradients.R")
tree = read.tree("VP1.treefile")
tree_rooted = midpoint.root(tree)
info = read.csv("../metadata.csv")
t = ggtree(tree_rooted, size=0.1) + geom_tiplab(size =0.2)
t
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_full.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/SerotypeCladeBar", basename(file), ".png")
svg_file <- paste0("Images/SerotypeCladeBar", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Test/SerotypeHeatBar/", basename(file), "_heatmap.png")
svg_file <- paste0("Test/SerotypeHeatBar/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "../metadata.csv"
for (file in trees){
g = plot_tree_with_heatmap(file, meta_path, serotype_colors) +
ggtitle(strsplit(basename(file), '.treefile')[[1]][1])
png_file <- paste0("Images/SerotypeHeatBar/", basename(file), "_heatmap.png")
svg_file <- paste0("Images/SerotypeHeatBar/", basename(file), "_heatmap.svg")
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
# Then you can get the list of trees in a specific directory (working directory in this example)
trees = list.files(path = ".", full.names = TRUE, pattern = ".treefile$")
meta_path = "metadata_upd_full.csv"
# Create visualization in a loop
for (file in trees){
# plot tree without legend, add title to plot
g = plot_tree(file,
meta_path)  +
ggtitle(strsplit(strsplit(file, '/')[[1]][2], '.treefile')[[1]][1])
# Construct full file paths
png_file <- paste0("Images/SerotypeCladeBar/", basename(file), ".png")
svg_file <- paste0("Images/SerotypeCladeBar/", basename(file), ".svg")
# Save figures
ggsave(png_file, g, height = 10, width = 7, dpi = 600)
ggsave(svg_file, g, height = 10, width = 7, dpi = 300)
}
